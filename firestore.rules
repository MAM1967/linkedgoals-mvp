rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can only access their own document, but admins can access any
    match /users/{userId} {
      allow read, write: if request.auth != null && (request.auth.uid == userId || isAdmin());

      // Rules for user subcollections (e.g., goals, checkins)
      match /{document=**} {
        allow read, write: if request.auth != null && (request.auth.uid == userId || isAdmin());
      }
    }

    // Allow admins to read/write any goal.
    // NOTE: This assumes a top-level 'goals' collection. 
    // If goals are stored differently, this rule will need to be adjusted.
    match /goals/{goalId} {
        allow read, write: if request.auth != null && isAdmin();
    }

    // Allow admins to query the 'goals' collection group
    match /{path=**}/goals/{goalId} {
      allow read: if request.auth != null && isAdmin();
    }

    // Email verification rules - users can read their own verification status
    match /emailVerifications/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if false; // Only Cloud Functions can write
    }

    // Email logs and templates - only functions can access
    match /emailLogs/{document} {
      allow read, write: if false; // Only Cloud Functions
    }
    
    match /emailTemplates/{document} {
      allow read, write: if false; // Only Cloud Functions
    }
  }
} 